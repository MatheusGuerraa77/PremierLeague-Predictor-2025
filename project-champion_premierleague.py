import streamlit as st
import pandas as pd
import numpy as np
import plotly.express as px
import random

# ---- CONFIGURA√á√ÉO DA P√ÅGINA ----
st.set_page_config(page_title="Premier League Predictor 2025", layout="wide")

# ---- CARREGANDO OS DADOS ----
@st.cache_data
def load_data():
    df = pd.read_csv("PremierDB.csv", delimiter=";")
    return df

df = load_data()

# ---- SIDEBAR ----
st.sidebar.header("‚öôÔ∏è Configura√ß√µes")
selected_team = st.sidebar.selectbox("üìä Estat√≠sticas Detalhadas do Time:", df["Equipe"].tolist())

# ---- CABE√áALHO ----
st.title("üèÜ Premier League Predictor 2025")
st.markdown("Acompanhe a **classifica√ß√£o**, **confrontos diretos** e **hist√≥rico de jogos**.(Dados do dia 17/01/2025)")

# ---- VISUALIZA√á√ÉO DA TABELA ----
st.subheader("üìä Classifica√ß√£o Atual")
st.dataframe(df.style.format({"Pts/PPJ": "{:.2f}", "xGD/90": "{:.2f}"}))

# ---- GR√ÅFICO DE PONTUA√á√ÉO ----
st.subheader("üî¢ Pontua√ß√£o dos Times")
fig = px.bar(df.sort_values(by="Pt", ascending=True), x="Pt", y="Equipe", orientation="h", text="Pt",
             color="Pt", color_continuous_scale="blues")
st.plotly_chart(fig, use_container_width=True)

# ---- CONFRONTOS RESTANTES ----
st.subheader("‚öΩ Confrontos Diretos Restantes")

# Simula√ß√£o b√°sica de confrontos
teams = df["Equipe"].tolist()
random.shuffle(teams)
confrontos_restantes = [(teams[i], teams[i+1]) for i in range(0, len(teams)-1, 2)]
confrontos_df = pd.DataFrame(confrontos_restantes, columns=["Time A", "Time B"])
st.table(confrontos_df)

# ---- HIST√ìRICO DE DESEMPENHO ----
st.subheader("üìà Hist√≥rico dos √öltimos 5 Jogos")

historico = df[["Equipe", "√öltimos 5"]].copy()
historico["Vit√≥rias"] = historico["√öltimos 5"].apply(lambda x: x.count("V"))
historico["Empates"] = historico["√öltimos 5"].apply(lambda x: x.count("E"))
historico["Derrotas"] = historico["√öltimos 5"].apply(lambda x: x.count("D"))

fig_hist = px.bar(historico, x="Equipe", y=["Vit√≥rias", "Empates", "Derrotas"], barmode="group",
                  title="Resultados dos √öltimos 5 Jogos", labels={"value": "Jogos", "variable": "Resultado"})
st.plotly_chart(fig_hist, use_container_width=True)

# ---- ESTAT√çSTICAS DETALHADAS ----
st.subheader(f"üìå Estat√≠sticas Detalhadas: {selected_team}")

team_stats = df[df["Equipe"] == selected_team].T
st.table(team_stats)

# ---- EXIBI√á√ÉO DE CONCLUS√ïES ----
st.markdown("### üîé Conclus√µes")
st.markdown("- **Os confrontos diretos podem mudar a classifica√ß√£o.**")
st.markdown("- **√öltimos jogos s√£o decisivos na proje√ß√£o do t√≠tulo.**")

# ---- FINALIZA√á√ÉO ----
st.markdown("‚öΩ Criado por Matheus Guerra. Dados fict√≠cios com base na temporada 2025.")
